type PlanFeature @key(fields: "id") {
  id: BigInt!
  plan_id: BigInt
  feature: JSON
}

type Query {
  getPlanFeature(id: BigInt!): PlanFeature
  getPlanFeatureList: [PlanFeature]
}

input ProductFeature {
  plan_product_variant_id: BigInt!
  country: String
  price: Float
}

input PlanFeatureMessage {
  message: String
  provider: ProviderFeatureType
}

input AddProductsFeatureInput {
  step: [Int]!
  products: [ProductFeature]!
  send_message: PlanFeatureMessage
}

input AddDiscountConditions {
  minimum_products: Int
}

input AddDiscountFeatureInput {
  type: AddDiscountFeatureType!
  amount: Float!
  duration: Int
  conditions: [AddDiscountConditions]
}

input AddBundleDefinitionFeatureInput {
  groups: [BundleDefinitonGroup]
}

input BundleDefinitonGroup {
  name: String
  quantity: Int
  products: [BigInt]
}

enum ProviderFeatureType {
  EMAIL
  SMS
}

enum AddDiscountFeatureType {
  PERCENTAGE
  FIXED
}

type Mutation {
  createPlanFeature(plan_id: BigInt!, feature: JSON): PlanFeature
    @auth(groups: ["VENDOR", "ADMIN", "TP"])

  updatePlanFeature(id: BigInt!, feature: JSON): PlanFeature
    @auth(groups: ["VENDOR", "ADMIN", "TP"])

  createAddProductsFeature(plan_id: BigInt!, input: AddProductsFeatureInput!): PlanFeature
    @auth(groups: ["VENDOR", "ADMIN", "TP"])

  createAddDiscountFeature(plan_id: BigInt!, input: AddDiscountFeatureInput!): PlanFeature
    @auth(groups: ["VENDOR", "ADMIN", "TP"])

  createAddBundleDefinitionFeature(
    plan_id: BigInt
    input: AddBundleDefinitionFeatureInput!
  ): PlanFeature

  deletePlanFeature(id: BigInt!): PlanFeature @auth(groups: ["VENDOR", "ADMIN", "TP"])
}

schema {
  query: Query
  mutation: Mutation
}
